#pragma checksum "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a63b00df7eefc56e77697574eb65ff52a1b9474c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Sys_RoleList), @"mvc.1.0.view", @"/Views/Sys/RoleList.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Sys/RoleList.cshtml", typeof(AspNetCore.Views_Sys_RoleList))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\_ViewImports.cshtml"
using Site.Cms;

#line default
#line hidden
#line 2 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\_ViewImports.cshtml"
using MicBeach.Web.Mvc;

#line default
#line hidden
#line 8 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
using MicBeach.Util.Extension;

#line default
#line hidden
#line 9 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
using MicBeach.Util.Serialize;

#line default
#line hidden
#line 10 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
using MicBeach.Application.Identity.User;

#line default
#line hidden
#line 11 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
using MicBeach.Application.Identity.Auth;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a63b00df7eefc56e77697574eb65ff52a1b9474c", @"/Views/Sys/RoleList.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0e5000250b2a0bb9c30615591362c9282acaa0ce", @"/Views/_ViewImports.cshtml")]
    public class Views_Sys_RoleList : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<MicBeach.ViewModel.Sys.RoleViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/ztree/skin.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/ztree/jquery.ztree.all.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/ztree/ztree.exhide.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/ztree/tree.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("exclude", "Development", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
  
    ViewBag.Title = "角色管理";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(83, 88, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("environment", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1f043261e0334a4592f3b98b7ab75ebd", async() => {
                BeginContext(96, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(102, 53, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "dee1471fc1f5438c8cb0ab1067d53226", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(155, 2, true);
                WriteLiteral("\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(171, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 12 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
  
    string allRole = ViewBag.AllRole;
    if (allRole.IsNullOrEmpty())
    {
        allRole = "[]";
    }
    string nodeString = ViewBag.AllNodes;
    if (nodeString.IsNullOrEmpty())
    {
        nodeString = "[]";
    }
    string selectNodeString = ViewBag.SelectNodes;
    if (selectNodeString.IsNullOrEmpty())
    {
        selectNodeString = "[]";
    }

    //权限分组
    string allAuthorityGroup = ViewBag.AllAuthorityGroup;
    if (allAuthorityGroup.IsNullOrEmpty())
    {
        allAuthorityGroup = "[]";
    }
    string groupNodeString = ViewBag.AllAuthGroupNodes;
    if (groupNodeString.IsNullOrEmpty())
    {
        groupNodeString = "[]";
    }
    var authStatusValues = AuthorityStatus.关闭.GetType().GetEnumValueAndNames();

#line default
#line hidden
            BeginContext(1148, 1012, true);
            WriteLiteral(@"
<div id=""pc-body"">
    <div id=""pc-body-inner"" class=""wp-100 hp-100"">
        <div class=""w-250 hp-100 fl"">
            <div class=""treelistgroup c_pagecon"">
                <div class=""c_head"">
                    <div class=""tlg_btncon"">
                        <button type=""button"" class=""btn btn-xs btn-blue"" id=""btn_addlevelone""><i class=""glyphicon glyphicon-plus""></i> 添加角色</button>
                        <button type=""button"" class=""btn btn-xs btn-danger"" id=""btn_deleteselect""><i class=""glyphicon glyphicon-trash""></i> 删除选中</button>
                    </div>
                </div>
                <div class=""c_body tlg_treecon"">
                    <div class=""c_bodyinner"">
                        <ul id=""Role_tree"" class=""ztree""></ul>
                    </div>
                </div>
            </div>
        </div>

        <div class=""hp-100 c_pagecon"">
            <div class=""form-ingroup c_head"" id=""role_form_con"">
                <div class=""fig-body form-con"">
");
            EndContext();
#line 65 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
                     using (Html.AjaxBeginForm("EditRole", "Blog", new AjaxFormOptions() { HttpMethod = "Post", OnSuccess = "EditSuccess" }, new { id = "Roleform", @class = "" }))
                    {
                        

#line default
#line hidden
            BeginContext(2389, 28, false);
#line 67 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
                   Write(Html.HiddenFor(c => c.SysNo));

#line default
#line hidden
            EndContext();
            BeginContext(2444, 35, false);
#line 68 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
                   Write(Html.HiddenFor(c => c.Parent.SysNo));

#line default
#line hidden
            EndContext();
            BeginContext(2481, 176, true);
            WriteLiteral("                        <table cellpadding=\"0\" cellspacing=\"0\" class=\"form_table\">\r\n                            <tr>\r\n                                <td class=\"txt-right tit\">");
            EndContext();
            BeginContext(2658, 28, false);
#line 71 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
                                                     Write(Html.LabelFor(c => c.Parent));

#line default
#line hidden
            EndContext();
            BeginContext(2686, 372, true);
            WriteLiteral(@"</td>
                                <td>
                                    <input type=""text"" id=""ParentName"" class=""form-control w-200"" style=""background:#fff"" readonly=""readonly"" value=""一级角色"" />
                                </td>
                            </tr>
                            <tr>
                                <td class=""txt-right tit"">* ");
            EndContext();
            BeginContext(3059, 26, false);
#line 77 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
                                                       Write(Html.LabelFor(c => c.Name));

#line default
#line hidden
            EndContext();
            BeginContext(3085, 81, true);
            WriteLiteral("</td>\r\n                                <td>\r\n                                    ");
            EndContext();
            BeginContext(3167, 67, false);
#line 79 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
                               Write(Html.TextBoxFor(a => a.Name, new { @class = "form-control w-200" }));

#line default
#line hidden
            EndContext();
            BeginContext(3234, 38, true);
            WriteLiteral("\r\n                                    ");
            EndContext();
            BeginContext(3273, 80, false);
#line 80 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
                               Write(Html.DefaultValidationMessageFor(a => a.Name, "", new { @class = "tip prompt" }));

#line default
#line hidden
            EndContext();
            BeginContext(3353, 170, true);
            WriteLiteral("\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td class=\"txt-right tit\">* ");
            EndContext();
            BeginContext(3524, 28, false);
#line 84 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
                                                       Write(Html.LabelFor(c => c.Status));

#line default
#line hidden
            EndContext();
            BeginContext(3552, 81, true);
            WriteLiteral("</td>\r\n                                <td>\r\n                                    ");
            EndContext();
            BeginContext(3634, 113, false);
#line 86 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
                               Write(Html.EnumToSelect(a => a.Status, RoleStatus.正常, new { @class = "form-control w-200" }, "", "选择状态", RoleStatus.正常));

#line default
#line hidden
            EndContext();
            BeginContext(3747, 38, true);
            WriteLiteral("\r\n                                    ");
            EndContext();
            BeginContext(3786, 82, false);
#line 87 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
                               Write(Html.DefaultValidationMessageFor(a => a.Status, "", new { @class = "tip prompt" }));

#line default
#line hidden
            EndContext();
            BeginContext(3868, 168, true);
            WriteLiteral("\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td class=\"txt-right tit\">");
            EndContext();
            BeginContext(4037, 28, false);
#line 91 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
                                                     Write(Html.LabelFor(c => c.Remark));

#line default
#line hidden
            EndContext();
            BeginContext(4065, 81, true);
            WriteLiteral("</td>\r\n                                <td>\r\n                                    ");
            EndContext();
            BeginContext(4147, 75, false);
#line 93 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
                               Write(Html.TextAreaFor(a => a.Remark, new { @class = "form-control w-200 h-50" }));

#line default
#line hidden
            EndContext();
            BeginContext(4222, 38, true);
            WriteLiteral("\r\n                                    ");
            EndContext();
            BeginContext(4261, 82, false);
#line 94 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
                               Write(Html.DefaultValidationMessageFor(a => a.Remark, "", new { @class = "tip prompt" }));

#line default
#line hidden
            EndContext();
            BeginContext(4343, 390, true);
            WriteLiteral(@"
                                </td>
                            </tr>
                            <tr>
                                <td></td>
                                <td><button class=""btn btn-blue"" type=""button"" onclick=""SubmitForm()""><i class=""glyphicon glyphicon-floppy-save""></i> 提交</button></td>
                            </tr>
                        </table>
");
            EndContext();
#line 102 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
                    }

#line default
#line hidden
            BeginContext(4756, 5174, true);
            WriteLiteral(@"                </div>
            </div>
            <div class=""c_body"">
                <div class=""form_tabgroup hide c_pagecon"" id=""detail_tabform"">
                    <ul class=""nav nav-tabs c_head"" role=""tablist"" id=""order_tabnav"">
                        <li role=""presentation"" class=""active"">
                            <a href=""#s_nosubmit"" role=""tab"" data-toggle=""tab"" class=""bd-lw-0"">成员管理</a>
                        </li>
                        <li role=""presentation"">
                            <a href=""#s_auth"" role=""tab"" data-toggle=""tab"">授权</a>
                        </li>
                    </ul>

                    <div class=""form_tabgconent tab-content dialog b_none c_body"" id=""role_tabcontent_con"">
                        <div role=""tabpanel"" id=""s_nosubmit"" class=""tab-pane active c_pagecon"">
                            <div class=""c_head"">
                                <div class=""lis_search pd-10"" id=""user_search"">
                                    <div class=""");
            WriteLiteral(@"input-group"">
                                        <input type=""text"" class=""form-control w-200"" id=""search_username"" placeholder=""登陆名/姓名"">
                                        <span class=""input-group-btn"">
                                            <button class=""btn btn-default fc_3"" type=""button"" id=""searchbusiness_btn"" onclick=""LoadRoleUsers()""><i class=""glyphicon glyphicon-search""></i></button>
                                        </span>
                                    </div>
                                    <button class=""btn btn-success"" type=""button"" id=""btn_adduser""><i class=""glyphicon glyphicon-plus""></i> 添加</button>
                                    <button class=""btn btn-danger"" type=""button"" id=""btn_delselectuser""><i class=""glyphicon glyphicon-trash""></i> 移除选中</button>
                                </div>
                            </div>
                            <div class=""c_body"">
                                <table cellpadding=""0"" cellspacing=""0"" id=""u");
            WriteLiteral(@"ser_table"" class=""table table-striped table-bordered nowrap wp-100 bd-lw-0""></table>
                            </div>
                            <div class=""c_foot bd-tw-1 bd-t-ddd bd-t-solid"" id=""user_tabe_pager""></div>
                        </div>

                        <div id=""s_auth"" class=""tab-pane c_pagecon"">
                            <div class=""c_body"">
                                <div class=""w-250 hp-100 fl"">
                                    <div class=""treelistgroup c_pagecon"">
                                        <div class=""c_body tlg_treecon"">
                                            <div class=""c_bodyinner"">
                                                <ul id=""AuthorityGroup_tree"" class=""ztree""></ul>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class=""hp-100 c_pagecon"" id=""auth_list_co");
            WriteLiteral(@"n"">
                                    <div class=""lis_search pd-10 c_head"" id=""auth_search"">
                                        <div class=""input-group"">
                                            <input type=""text"" class=""form-control w-200"" id=""search_authname"" placeholder=""权限名称/编码"">
                                            <span class=""input-group-btn"">
                                                <button class=""btn btn-default fc_3"" type=""button"" id=""searchbusiness_btn"" onclick=""LoadAuthoritys()""><i class=""glyphicon glyphicon-search""></i></button>
                                            </span>
                                        </div>
                                    </div>
                                    <div class=""c_body"">
                                        <table class=""table table-striped table-bordered nowrap wp-100 bd-lw-0"" cellpadding=""0"" cellspacing=""0"" id=""auth_table""></table>
                                    </div>
                             ");
            WriteLiteral(@"   </div>
                            </div>
                            <div class=""c_foot"">
                                <div class=""txt-right form-submitbtn-con pdr-10"">
                                    <button class=""btn btn-blue"" type=""button"" id=""btn_submit"" onclick=""SubmitRoleAuthorize()""><i class=""glyphicon glyphicon-ok""></i> 应用授权</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id=""parentRole_tree_con"" class=""c_pagecon digs_con w-200 h-300 ps-absolute bd-rad-0 bg-f bd-ddd bd-solid bd-w-1"" style=""background: #fff;display:none;"">
    <div class=""c_body"">
        <div class=""c_bodyinner"">
            <ul id=""parentRole_tree"" class=""ztree""></ul>
        </div>
    </div>
    <div class=""c_foot"">
        <div class=""form-submitbtn-con txt-center""><button type=""button"" id=""btn_cachetreeselect"" class=""btn btn-");
            WriteLiteral("xs btn-blue\">关闭</button></div>\r\n    </div>\r\n</div>\r\n\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(9953, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(9959, 159, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("environment", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "586367f7ac8645ac9bc643af78e35d86", async() => {
                    BeginContext(9972, 10, true);
                    WriteLiteral("\r\n        ");
                    EndContext();
                    BeginContext(9982, 55, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a947b62f31a3448c86d67f1903e327a0", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(10037, 10, true);
                    WriteLiteral("\r\n        ");
                    EndContext();
                    BeginContext(10047, 51, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "325bb0a303fd49dc92c6e865c2e8e6d0", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(10098, 6, true);
                    WriteLiteral("\r\n    ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(10118, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(10124, 112, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("environment", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c7bb412dfce24698bd8839ea64c554bd", async() => {
                    BeginContext(10159, 10, true);
                    WriteLiteral("\r\n        ");
                    EndContext();
                    BeginContext(10169, 47, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8f746a680c5b45e796a0e452a0aaaab0", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(10216, 6, true);
                    WriteLiteral("\r\n    ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper.Exclude = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(10236, 212, true);
                WriteLiteral("\r\n    <script type=\"text/javascript\">\r\n        BodyScroll = false\r\n        HasDivPageCon = true;\r\n        TabConentScroll=true;\r\n        var isAdd = true;\r\n        var imgPath = \"\";\r\n        var changeSortUrl = \'");
                EndContext();
                BeginContext(10449, 40, false);
#line 200 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
                        Write(Url.Action("ChangeRoleSortIndex", "Sys"));

#line default
#line hidden
                EndContext();
                BeginContext(10489, 29, true);
                WriteLiteral("\';\r\n        var deleteUrl = \'");
                EndContext();
                BeginContext(10519, 31, false);
#line 201 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
                    Write(Url.Action("DeleteRole", "Sys"));

#line default
#line hidden
                EndContext();
                BeginContext(10550, 1607, true);
                WriteLiteral(@"';
        var loadingIcoUrl = '/Content/Scripts/ztree/img/loading.gif';
        var editRole = null;
        var selectNodeLevel=0;
        var authStatusDic=new Object();
        var seetings = {
            view: {
                nameIsHTML: true,
                //showIcon:false
            },
            callback: {
                onClick: AllRoleNodeClick,
                beforeDrag: beforeDrag,
                beforeDrop: beforeDrop,
                beforeExpand: BeforeExpand,
            },
            check: {
                enable: true,
                chkboxType: { ""Y"": """", ""N"": """" }
            },
            edit: {
                enable: true,
                showRemoveBtn: false,
                showRenameBtn: false,
                drag: {
                    isMove: true,
                    inner: false,
                    prev: true,
                    next: true
                }
            }
        };
        var parentTreeSettings =
            {");
                WriteLiteral(@"
                view: {
                    nameIsHTML: true,
                    //showIcon: false
                },
                callback: {
                    onClick: SelectRoleNodeClick,
                    beforeExpand: SelectBeforeExpand
                }
            };
        var authGroupSeetings = {
            view: {
                nameIsHTML: true,
            },
            callback: {
                onClick: AllAuthorityGroupNodeClick,
                beforeExpand: AuthGroupBeforeExpand
            }
        };
        var allNodes = ");
                EndContext();
                BeginContext(12158, 20, false);
#line 253 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
                  Write(Html.Raw(nodeString));

#line default
#line hidden
                EndContext();
                BeginContext(12178, 29, true);
                WriteLiteral(";\r\n        var selectNodes = ");
                EndContext();
                BeginContext(12208, 26, false);
#line 254 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
                     Write(Html.Raw(selectNodeString));

#line default
#line hidden
                EndContext();
                BeginContext(12234, 26, true);
                WriteLiteral(";\r\n        var allRoles = ");
                EndContext();
                BeginContext(12261, 17, false);
#line 255 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
                  Write(Html.Raw(allRole));

#line default
#line hidden
                EndContext();
                BeginContext(12278, 67, true);
                WriteLiteral(";\r\n        var selectedNode = null;\r\n\r\n        var allGroupNodes = ");
                EndContext();
                BeginContext(12346, 25, false);
#line 258 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
                       Write(Html.Raw(groupNodeString));

#line default
#line hidden
                EndContext();
                BeginContext(12371, 36, true);
                WriteLiteral(";\r\n        var allAuthorityGroups = ");
                EndContext();
                BeginContext(12408, 27, false);
#line 259 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
                            Write(Html.Raw(allAuthorityGroup));

#line default
#line hidden
                EndContext();
                BeginContext(12435, 159, true);
                WriteLiteral(";\r\n        var newSelectedAuthoritys=new Object();\r\n        var removeAuthoritys=new Object();\r\n        $(function () {\r\n            authStatusDic=JSON.parse(\'");
                EndContext();
                BeginContext(12595, 54, false);
#line 263 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
                                 Write(Html.Raw(JsonSerialize.ObjectToJson(authStatusValues)));

#line default
#line hidden
                EndContext();
                BeginContext(12649, 12704, true);
                WriteLiteral(@"');
            InitAllRoleTree();
            InitSelectRoleTree();
            InitAllAuthorityGroupTree();
            //用户表格
            InitDataTable({
                TableEle:'#user_table',
                ""columnDefs"": [
				        { ""title"": '<input type=""checkbox"" class=""cbx_all""/>', ""targets"": 0,""data"":function ( row, type, val, meta ) {
				            return '<input type=""checkbox"" class=""cbx_val"" value=""'+row.SysNo+'""/>';
				        },width:'20px',className:'txt-center' },
    					{ ""title"": ""姓名"", ""targets"": 1,""data"":'RealName',width:'150px' },
    					{ ""title"": ""登陆名"", ""targets"": 2,""data"":'UserName',width:'150px' },
    					{ ""title"": ""手机"", ""targets"": 3,""data"":'Mobile',width:'150px' },
    					{ ""title"": ""邮箱"", ""targets"": 4,""data"":'Email' },
    					{ ""title"": ""操作"", ""targets"": 5,""data"":function(row,type,val,meta){
    					    var menuItems=new Array();
    					    menuItems.push('<li><a href=""javascript:void(0)"" class=""btn_removeroleuser"" sysno=""_sysNo"" username=""_userN");
                WriteLiteral(@"ame""><i class=""glyphicon glyphicon-trash""></i> 移除</a></li>'.replace('_sysNo',row.SysNo).replace('_userName',row.UserName));
    					    return '<div class=""btn-group""><button type=""button"" class=""btn btn-blue dropdown-toggle"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">管理 <span class=""caret""></span></button><ul class=""dropdown-menu list-dropdown-menu"" style=""width:62px"">'+menuItems.join('')+'</ul></div>';
    					},width:'62px',className:'txt-center' },
                ]
            });
            //授权列表
            InitDataTable({
                TableEle:'#auth_table',
                'columnDefs':[{ ""title"": '<input type=""checkbox"" class=""cbx_all"" id=""auth_cbx_all""/>', ""targets"": 0,""data"":function ( row, type, val, meta ) {
                    return '<input type=""checkbox"" class=""cbx_val auth_cbx_val"" value=""'+row.Code+'""'+(row.AllowUse?' checked=""checked""':'')+'/>';
                },width:'20px',className:'txt-center' },
                { ""title"": ""名称"", ""targets"": 1,""");
                WriteLiteral(@"data"":'Name',width:'200px' },
                { ""title"": ""编码"", ""targets"": 2,""data"":""Code"",width:'150px'},
                { ""title"": ""状态"", ""targets"": 3,""data"":function ( row, type, val, meta ){
                    return authStatusDic[row.Status];
                }}
                ]
            });
            //添加一级
            $(""#btn_addlevelone"").click(function () {
                ResetForm();
                $(""#ParentName"").val(JoinParentRoleNames(null));
            });

            //上移
            $(""#btn_sortup"").click(function () {
                if (!selectedNode) {
                    return;
                }
                var prevNode = selectedNode.getPreNode();
                if (!prevNode) {
                    return;
                }
                MoveNode(selectedNode, prevNode, 'prev');
            });
            //下移
            $(""#btn_sortdown"").click(function () {
                if (!selectedNode) {
                    return;
                }");
                WriteLiteral(@"
                var nextNode = selectedNode.getNextNode();
                if (!nextNode) {
                    return;
                }
                MoveNode(selectedNode, nextNode, 'next');
            });

            //删除
            $(""#btn_deleteselect"").click(function () {
                var checkNodes = $.fn.zTree.getZTreeObj(""Role_tree"").getCheckedNodes(true);
                var sysNoArray = new Array();
                for (var i = 0; i < checkNodes.length; i++) {
                    sysNoArray.push(checkNodes[i].id);
                }
                DeleteRole(sysNoArray.join(','));
            });

            //上级角色
            $(""#ParentName"").focus(function () {
                var ele = $(this);
                var treeCon = $(""#parentRole_tree_con"");
                treeCon.css(""left"", ele.offset().left);
                treeCon.css(""top"", ele.offset().top + ele.height() + 2);
                treeCon.show();
            });
            //取消角色选择
            $(");
                WriteLiteral(@"""#btn_cachetreeselect"").click(function () {
                $(""#parentRole_tree_con"").hide();
            });
            //选择用户
            $(""#btn_adduser"").click(function(){
                SelectUser();
            });
            //移除用户
            $(""body"").on(""click"", '.btn_removeroleuser', function () {
                var sysNo = $.trim($(this).attr(""sysno""));
                var sysNoArray = new Array();
                sysNoArray.push(sysNo);
                UnBindRoleUsers(sysNoArray);
            });
            //移除选中用户
            $(""#btn_delselectuser"").click(function () {
                var sysNos = GetDataTableCheckedValues(""#user_table"");
                UnBindRoleUsers(sysNos);
            });

            //选择授权
            $(""body"").on(""click"","".auth_cbx_val"",function(){
                var checked=$(this)[0].checked;
                var sysNos=new Array();
                var val=$.trim($(this).val());
                if(val==''){
                    return;
");
                WriteLiteral(@"                }
                sysNos.push(val);
                if(checked){
                    SelectedAuthority(sysNos);
                }else{
                    RemoveAuthority(sysNos);
                }
            });
            //授权权限
            $(""body"").on(""click"",'#auth_cbx_all',function(){
                var checked=$(this)[0].checked;
                var sysNos=new Array();
                $('.auth_cbx_val').each(function(i,e){
                    e.checked=checked;
                    sysNos.push($(e).val());
                });
                if(checked){
                    SelectedAuthority(sysNos);
                }else{
                    RemoveAuthority(sysNos);
                }
            });
        });

        //移动节点
        function MoveNode(treeNode, targetNode, moveType) {
            if (treeNode.tId == targetNode.tId) {
                return false;
            }
            var sortIndex = 0;
            if (moveType == ""inner"") {
      ");
                WriteLiteral(@"          if (targetNode.tId != treeNode.parentTId) {
                    return false;
                }
                sortIndex = 1;
            } else {
                if (treeNode.parentTId != targetNode.parentTId) {
                    return false;
                }
                var targetId = targetNode.id;
                var targetArea = allRoles[targetId];
                if (!targetArea) {
                    return false;
                }
                sortIndex = moveType == ""prev"" ? targetArea.SortIndex : targetArea.SortIndex + 1;
            }
            var nowId = treeNode.id;
            $.post(changeSortUrl, { sysNo: nowId, sortIndex: sortIndex }, function (res) {
                if (res.Success) {
                    InitData(res);
                }
            })
            $.fn.zTree.getZTreeObj(""Role_tree"").moveNode(targetNode, treeNode, moveType, true);
            return false;
        }

        //拖拽之前事件
        function beforeDrag(treeId, treeNod");
                WriteLiteral(@"es) {
            for (var i = 0, l = treeNodes.length; i < l; i++) {
                if (treeNodes[i].drag === false) {
                    return false;
                }
            }
            return true;
        }
        //拖拽事件
        function beforeDrop(treeId, treeNodes, targetNode, moveType) {
            if (!treeNodes || !targetNode || treeNodes.length <= 0) {
                return false;
            }
            var firstNode = treeNodes[0];
            return MoveNode(firstNode, targetNode, moveType);
        }

        //提交表单
        function SubmitForm() {
            $(""#Roleform"").submit();
        }

        //重置表单
        function ResetForm() {
            $(""#Roleform"")[0].reset();
            $(""#parentRole_tree_con"").hide();
            isAdd = true;
            InitSelectRoleTree();
            $(""#SysNo,#Parent_SysNo"").val('0');
            editRole = null;
            HideDetailForm();
            ClearDataTableData(""#auth_table"");
        }

  ");
                WriteLiteral(@"      //角色选择节点点击
        function SelectRoleNodeClick(event, treeId, treeNode) {
            var parentNodeNames = JoinParentRoleNames(treeNode);
            $(""#ParentName"").val(parentNodeNames);
            $(""#Parent_SysNo"").val(treeNode.id);
            $(""#parentRole_tree_con"").hide();
        }

        function JoinParentRoleNames(treeNode) {
            if (!treeNode) {
                return ""一级角色"";
            }
            var parentNodes = new Array();
            var nowNode = treeNode;
            var parentNodeNames = '';
            while (true) {
                var parentNode = nowNode.getParentNode();
                if (!parentNode) {
                    break;
                }
                nowNode = parentNode;
                parentNodeNames = parentNode.name + '->' + parentNodeNames;
            }
            parentNodeNames += treeNode.name;
            return parentNodeNames;
        };

        //左侧角色节点选择
        function AllRoleNodeClick(event, treeId");
                WriteLiteral(@", treeNode) {
            var nowRole = allRoles[treeNode.id];
            editRole = nowRole;
            var parentNodeNames = JoinParentRoleNames(treeNode.getParentNode());
            InitEditRole(nowRole, parentNodeNames);
            selectedNode = treeNode;
            //HideSelectRoleNodes(treeNode.level);
            InitSelectRoleTree();
            selectNodeLevel=treeNode.level;
            $.fn.zTree.getZTreeObj(""Role_tree"").selectNode(treeNode, false);
            ClearDataTableData(""#auth_table"");
        }

        //初始化编辑角色
        function InitEditRole(area, parentNames) {
            if (!area) {
                return;
            }
            $(""#ParentName"").val(parentNames);
            var parentSysNo=0;
            if(area.Parent)
            {
                parentSysNo=area.Parent.SysNo;
            }
            $(""#Parent_SysNo"").val(parentSysNo);
            $(""#SysNo"").val(area.SysNo);
            $(""#Name"").val(area.Name);
            $(""#Status"").v");
                WriteLiteral(@"al(area.Status);
            $(""#Remark"").val(area.Remark);
            isAdd = false;
            ShowDetailForm();
        };

        //添加成功
        function EditSuccess(res) {
            ResultMsg(res);
            if (res.Success) {
                if (isAdd) {
                    ResetForm();
                }
                InitData(res);
            }
        }

        //初始化数据
        function InitData(res) {
            allNodes = JSON.parse(res.Data.AllNode);
            if(!allNodes){
                return;
            }
            selectNodes = JSON.parse(res.Data.SelectNode);
            if(!selectNodes){
                selectNodes=[];
            }
            allRoles = JSON.parse(res.Data.AllRole);
            if(!allRoles){
                return;
            }
            InitAllRoleTree();
            InitSelectRoleTree();
        }

        //初始化所有角色树控件
        function InitAllRoleTree() {
            $.fn.zTree.init($(""#Role_tree""), seetings, all");
                WriteLiteral(@"Nodes);
        }

        //初始化选择角色树控件
        function InitSelectRoleTree() {
            $.fn.zTree.init($(""#parentRole_tree""), parentTreeSettings, selectNodes);
        }

        //隐藏大于等于指定级别的选择角色
        function HideSelectRoleNodes(startLevel) {
            InitSelectRoleTree();
            var treeObj = $.fn.zTree.getZTreeObj(""parentRole_tree"");
            var nodes = treeObj.getNodesByFilter(function (node) {
                return node.level >= startLevel && node.name != '一级角色';
            }, false);
            treeObj.hideNodes(nodes);
        }

        function DeleteRole(sysNos) {
            if ($.trim(sysNos) == """") {
                ErrorMsg(""没有选择要删除的角色信息"");
                return;
            }
            ConfirmMsg('删除角色将同时删除该角色下的所有子角色,确认删除吗?', function (res) {
                $.post(deleteUrl, { sysNos: sysNos }, function (res) {
                    ResultMsg(res);
                    if (res.Success) {
                        InitData(res);
                ");
                WriteLiteral(@"        ResetForm();
                    }
                });
            });
        }

        //展开加载数据
        function BeforeExpand(treeId, treeNode){
            if(!treeNode||treeNode.loadData){
                return true;
            }
            var zTree=$.fn.zTree.getZTreeObj(treeId);
            treeNode.icon = loadingIcoUrl;
            zTree.updateNode(treeNode);
            $.post('");
                EndContext();
                BeginContext(25354, 34, false);
#line 598 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
               Write(Url.Action("LoadChildRoles","Sys"));

#line default
#line hidden
                EndContext();
                BeginContext(25388, 1068, true);
                WriteLiteral(@"',{parentId:treeNode.id},function(res){
                if(!res){
                    return;
                }
                var childNodes=JSON.parse(res.ChildNodes);
                zTree.addNodes(treeNode, -1, childNodes);
                treeNode.loadData = true;
                treeNode.icon = """";
                zTree.updateNode(treeNode);
                zTree.expandNode(treeNode,true);
                var childRoles=JSON.parse(res.RoleData);
                for(var c in childRoles){
                    allRoles[c]=childRoles[c];
                }
            });
            return false;
        }

        //选择角色展开
        function SelectBeforeExpand(treeId, treeNode){
            if(!treeNode||treeNode.loadData){
                return true;
            }
            if(editRole&&treeNode.level>=selectNodeLevel-1){
                return true;
            }
            var zTree=$.fn.zTree.getZTreeObj(treeId);
            treeNode.icon = loadingIcoUrl;
            zTree");
                WriteLiteral(".updateNode(treeNode);\r\n            $.post(\'");
                EndContext();
                BeginContext(26457, 34, false);
#line 627 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
               Write(Url.Action("LoadChildRoles","Sys"));

#line default
#line hidden
                EndContext();
                BeginContext(26491, 1361, true);
                WriteLiteral(@"',{parentId:treeNode.id},function(res){
                if(!res){
                    return;
                }
                var childNodes=JSON.parse(res.ChildNodes);
                zTree.addNodes(treeNode, -1, childNodes);
                treeNode.loadData = true;
                treeNode.icon = """";
                zTree.updateNode(treeNode);
                zTree.expandNode(treeNode,true);
                var childRoles=JSON.parse(res.RoleData);
                for(var c in childRoles){
                    allRoles[c]=childRoles[c];
                }
            });
            return false;
        }

        //显示角色内容管理窗口
        function ShowDetailForm(){
            ResetUser();
            LoadRoleUsers();
            ResetAuth();
            $(""#detail_tabform"").removeClass(""hide"");
            $(window).resize();
        }

        //隐藏角色内容管理窗口
        function HideDetailForm(){
            $(""#detail_tabform"").addClass(""hide"");
            $(""#user_tabe_page_list"").");
                WriteLiteral(@"html("""");
        }

        //加载角色用户
        function LoadRoleUsers(){
            if(!editRole){
                return;
            }
            var userName=$.trim($(""#search_username"").val());
            var roleIds=new Array();
            roleIds.push(editRole.SysNo);
            PageSearch({
                url: '");
                EndContext();
                BeginContext(27853, 37, false);
#line 669 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
                 Write(Url.Action("GetRoleAdminUsers","Sys"));

#line default
#line hidden
                EndContext();
                BeginContext(27890, 531, true);
                WriteLiteral(@"',
                data: {
                    NameMateKey:userName,
                    RoleFilter:{
                        SysNos:roleIds
                    }
                },
                listEle: ""#user_table"",
                pagerEle: ""#user_tabe_pager"",
                callback: function () {
                }
            });
        }

        //选择用户
        function SelectUser(){
            if(!editRole){
                return;
            }
            DialogPage({
                url: '");
                EndContext();
                BeginContext(28422, 70, false);
#line 689 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
                 Write(Url.Action("AdminUserMultiSelect","Sys",new { ExcludeRoleIds="_erid"}));

#line default
#line hidden
                EndContext();
                BeginContext(28492, 646, true);
                WriteLiteral(@"'.replace('_erid',editRole.SysNo),
                width: ""600px"",
                height: ""400px"",
                title: '选择用户',
                ok: false,
                cancel: null
            });
        }

        //用户选择回调用
        function AdminUserMultiSelectCallback(users){
            if(!users||users.length<=0){
                return;
            }
            var userIds=new Array();
            for(var u in users){
                userIds.push(users[u].SysNo);
            }
            var data={
                roleId:editRole.SysNo,
                userIds:userIds
            };
            $.post('");
                EndContext();
                BeginContext(29139, 31, false);
#line 711 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
               Write(Url.Action("AddRoleUser","Sys"));

#line default
#line hidden
                EndContext();
                BeginContext(29170, 469, true);
                WriteLiteral(@"',data,function(res){
                ResultMsg(res);
                if(res.Success){
                    LoadRoleUsers();
                }
            });
        }

        //解绑角色用户
        function UnBindRoleUsers(userIds) {
            if (!userIds || userIds.length <= 0) {
                return;
            }
            var data = {
                roleId: editRole.SysNo,
                userIds: userIds
            };
            $.post('");
                EndContext();
                BeginContext(29640, 34, false);
#line 728 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
               Write(Url.Action("UnBindRoleUser","Sys"));

#line default
#line hidden
                EndContext();
                BeginContext(29674, 1337, true);
                WriteLiteral(@"', data, function (res) {
                ResultMsg(res);
                if (res.Success) {
                    LoadRoleUsers();
                }
            });
        }

        //获取选中的角色用户
        function GetSelectRoleUsers() {
            var checkedValues = new Array();
            $(""#user_tabe_page_list .table_cbox"").each(function (i, e) {
                if (e.checked) {
                    var nowValue = $.trim($(e).val());
                    if (nowValue != """") {
                        checkedValues.push(nowValue);
                    }
                }
            });
            return checkedValues;
        }

        //初始化所有权限分组树控件
        function InitAllAuthorityGroupTree() {
            $.fn.zTree.init($(""#AuthorityGroup_tree""), authGroupSeetings, allGroupNodes);
        }

        //左侧权限分组节点选择
        function AllAuthorityGroupNodeClick(event, treeId, treeNode) {
            var nowAuthorityGroup = allAuthorityGroups[treeNode.id];
            $.fn.zTree.g");
                WriteLiteral(@"etZTreeObj(""AuthorityGroup_tree"").selectNode(treeNode, false);
            selectGroupId = treeNode.id;
            LoadAuthoritys();
        }

        //加载权限数据
        function LoadAuthoritys(){
            if(!selectGroupId||!editRole){
                return;
            }
            var loadUrl='");
                EndContext();
                BeginContext(31012, 45, false);
#line 768 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
                    Write(Url.Action("LoadRoleAuthorityByGroup", "Sys"));

#line default
#line hidden
                EndContext();
                BeginContext(31057, 668, true);
                WriteLiteral(@"';
            $.post(loadUrl, { groupId: selectGroupId, key: $.trim($(""#search_authname"").val()),roleId:editRole.SysNo},function(res){
                ReplaceDataTableData(""#auth_table"",JSON.parse(res.Datas));
                $(window).resize();
                InitDataTableChecked(""#auth_table"");
            });
        }

        //权限分组展开加载数据
        function AuthGroupBeforeExpand(treeId, treeNode){
            if(!treeNode||treeNode.loadData){
                return true;
            }
            var zTree=$.fn.zTree.getZTreeObj(treeId);
            treeNode.icon = loadingIcoUrl;
            zTree.updateNode(treeNode);
            $.post('");
                EndContext();
                BeginContext(31726, 44, false);
#line 784 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
               Write(Url.Action("LoadChildAuthorityGroups","Sys"));

#line default
#line hidden
                EndContext();
                BeginContext(31770, 1763, true);
                WriteLiteral(@"',{parentId:treeNode.id},function(res){
                if(!res){
                    return;
                }
                var childNodes=JSON.parse(res.ChildNodes);
                zTree.addNodes(treeNode, -1, childNodes);
                treeNode.loadData = true;
                treeNode.icon = """";
                zTree.updateNode(treeNode);
                zTree.expandNode(treeNode,true);
                var childAuthorityGroups=JSON.parse(res.AuthorityGroupData);
                for(var c in childAuthorityGroups){
                    allAuthorityGroups[c]=childAuthorityGroups[c];
                }
            });
            return false;
        }

        //提交角色授权
        function SubmitRoleAuthorize(){
            if(!editRole){
                return;
            }
            if(!newSelectedAuthoritys&&!removeAuthoritys){
                SuccessMsg('修改成功');
                return;
            }
            var newAuthorityCodes='';//新增授权
            var removeAuthorit");
                WriteLiteral(@"yCodes='';//移除授权
            if(newSelectedAuthoritys){
                for(var a in newSelectedAuthoritys){
                    if(!newSelectedAuthoritys[a]){
                        continue;
                    }
                    newAuthorityCodes+="",""+a;
                }
            }
            if(removeAuthoritys){
                for(var r in removeAuthoritys){
                    if(!removeAuthoritys[r]){
                        continue;
                    }
                    removeAuthorityCodes+="",""+r;
                }
            }
            if(newAuthorityCodes==''&&removeAuthorityCodes==''){
                SuccessMsg('修改成功');
                return;
            }
            $.post('");
                EndContext();
                BeginContext(33534, 40, false);
#line 833 "F:\GitHubProject\MicBeach.Framework.Core\src\Application\Site\Site.Cms\Views\Sys\RoleList.cshtml"
               Write(Url.Action("ModifyRoleAuthority", "Sys"));

#line default
#line hidden
                EndContext();
                BeginContext(33574, 2257, true);
                WriteLiteral(@"',{roleId:editRole.SysNo,removeAuthCodes:removeAuthorityCodes,newAuthCodes:newAuthorityCodes},function(res)
            {
                if(res.Success){
                    newSelectedAuthoritys=new Object();
                    removeAuthoritys=new Object();
                }
                ResultMsg(res);
            });
        }

        //选择新的权限
        function SelectedAuthority(authCodes){
            if(!authCodes||authCodes.length<=0){
                return;
            }
            for(var c in authCodes){
                var code=authCodes[c];
                if(newSelectedAuthoritys[code]){
                    continue;
                }
                else if(removeAuthoritys[code]){
                    removeAuthoritys[code]=null;
                }
                else{
                    newSelectedAuthoritys[code]={Code:code,Status:1};
                }
            }
        }

        //移除权限
        function RemoveAuthority(authCodes){
            if(!aut");
                WriteLiteral(@"hCodes||authCodes.length<=0){
                return;
            }
            for(var c in authCodes){
                var code=authCodes[c];
                if(removeAuthoritys[code]){
                    continue;
                }else if(newSelectedAuthoritys[code]){
                    newSelectedAuthoritys[code]=null;
                }else{
                    removeAuthoritys[code]={Code:code,Status:1};
                }
            }
        }

        //重置用户
        function ResetUser(){
            $(""#search_username"").val('');
            $(""#user_tabe_page_list"").html("""");
        }

        //重置授权信息
        function ResetAuth(){
            InitAllAuthorityGroupTree();
            $(""#search_authname"").val('');
            newSelectedAuthoritys=new Object();
            removeAuthoritys=new Object();
        }

        //选择权限
        function CheckAuthChecked(){
            var checkAll=true&&$(""#auth_tabe_page_list tr td .table_cbox"").length>0;
            $(""#a");
                WriteLiteral("uth_tabe_page_list tr td .table_cbox\").each(function(i,e){\r\n                checkAll=checkAll&&e.checked;\r\n            });\r\n            $(\".table_authcheckall\")[0].checked=checkAll;\r\n        }\r\n    </script>\r\n");
                EndContext();
            }
            );
            BeginContext(35834, 2, true);
            WriteLiteral("\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<MicBeach.ViewModel.Sys.RoleViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
