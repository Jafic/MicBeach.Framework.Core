@{
    ViewBag.Title = "权限分组管理";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<environment>
    <link href="~/lib/ztree/skin.css" rel="stylesheet" />
</environment>
@using MicBeach.Util.Extension;
@using MicBeach.Application.Identity.Auth;
@using MicBeach.Util.Serialize;
@{
    string allAuthorityGroup = ViewBag.AllAuthorityGroup;
    if (allAuthorityGroup.IsNullOrEmpty())
    {
        allAuthorityGroup = "[]";
    }
    string nodeString = ViewBag.AllNodes;
    if (nodeString.IsNullOrEmpty())
    {
        nodeString = "[]";
    }
    string selectNodeString = ViewBag.SelectNodes;
    if (selectNodeString.IsNullOrEmpty())
    {
        selectNodeString = "[]";
    }
    var statusValues = AuthorityStatus.启用.GetType().GetEnumValueAndNames();
}
@model MicBeach.ViewModel.Sys.AuthorityGroupViewModel
<div id="pc-body" class="b_none">
    <div id="pc-body-inner">
        <div class="w-250 hp-100 fl">
            <div class="treelistgroup c_pagecon">
                <div class="c_head">
                    <div class="tlg_btncon bg_f5">
                        <button type="button" class="btn btn-xs btn-blue" id="btn_addlevelone"><i class="glyphicon glyphicon-plus"></i> 添加分组</button>
                        <button type="button" class="btn btn-xs btn-danger" id="btn_deleteselect"><i class="glyphicon glyphicon-trash"></i> 删除选中</button>
                    </div>
                </div>
                <div class="c_body tlg_treecon">
                    <div class="c_bodyinner">
                        <ul id="AuthorityGroup_tree" class="ztree"></ul>
                    </div>
                </div>
            </div>
        </div>

        <div class="hp-100 c_pagecon">
            <div class="form-ingroup c_head" id="authgroup_form_con">
                <div class="fig-body form-con">
                    @using (Html.AjaxBeginForm("EditAuthorityGroup", "Blog", new AjaxFormOptions() { HttpMethod = "Post", OnSuccess = "EditSuccess" }, new { id = "AuthorityGroupform" }))
                    {
                        @Html.HiddenFor(c => c.SysNo)
                        @Html.HiddenFor(c => c.Parent.SysNo)

                        <table cellpadding="0" cellspacing="0" class="form_table">
                            <tr>
                                <td class="txt-right tit">* @Html.LabelFor(c => c.Parent)</td>
                                <td>
                                    <input type="text" id="ParentName" class="form-control w-200" style="background:#fff" readonly="readonly" value="一级分组" />
                                </td>
                            </tr>

                            <tr>
                                <td class="txt-right tit">* @Html.LabelFor(c => c.Name)</td>
                                <td>
                                    @Html.TextBoxFor(a => a.Name, new { @class = "form-control w-200" })
                                    @Html.DefaultValidationMessageFor(a => a.Name, "", new { @class = "tip prompt" })
                                </td>
                            </tr>
                            <tr>
                                <td class="txt-right tit">* @Html.LabelFor(c => c.Status)</td>
                                <td>
                                    @Html.EnumToSelect(a => a.Status, AuthorityGroupStatus.启用, new { @class = "form-control w-200" }, "", "选择状态", AuthorityGroupStatus.启用)
                                    @Html.DefaultValidationMessageFor(a => a.Status, "", new { @class = "tip prompt" })
                                </td>
                            </tr>
                            <tr>
                                <td class="txt-right tit">@Html.LabelFor(c => c.Remark)</td>
                                <td>
                                    @Html.TextAreaFor(a => a.Remark, new { @class = "form-control w-200", style = "height:50px" })
                                    @Html.DefaultValidationMessageFor(a => a.Remark, "", new { @class = "tip prompt" })
                                </td>
                            </tr>
                            <tr>
                                <td></td>
                                <td><button class="btn btn-blue" type="button" onclick="SubmitForm()"><i class="glyphicon glyphicon-floppy-save"></i> 提交</button></td>
                            </tr>
                        </table>
                    }
                </div>
            </div>

            <div class="c_body">
                <div class="form_tabgroup hide c_pagecon" id="detail_tabform">
                    <ul class="nav nav-tabs c_head" role="tablist" id="order_tabnav">
                        <li role="presentation" class="active">
                            <a href="#s_nosubmit" role="tab" data-toggle="tab" class="b_radnone b_l_none">权限数据</a>
                        </li>
                    </ul>

                    <div class="form_tabgconent tab-content dialog c_body" id="auth_tabcontent_con">
                        <div role="tabpanel" id="s_nosubmit" class="tab-pane active c_pagecon">
                            <div class="c_head">
                                <div class="lis_search pd-10" id="auth_search">
                                    <div class="input-group">
                                        <input type="text" class="form-control w-200" id="search_authname" placeholder="权限名称/编码">
                                        <span class="input-group-btn">
                                            <button class="btn btn-default fc_3" type="button" id="searchbusiness_btn" onclick="LoadAuthoritys()"><i class="glyphicon glyphicon-search"></i></button>
                                        </span>
                                    </div>
                                    <button class="btn btn-success" type="button" id="btn_addauthority"><i class="glyphicon glyphicon-plus"></i> 添加</button>
                                    <button class="btn btn-danger" type="button" id="btn_delselectauthority"><i class="glyphicon glyphicon-trash"></i> 删除选中</button>
                                </div>
                            </div>

                            <div class="c_body">
                                <table class="table table-striped table-bordered nowrap wp-100 bd-lw-0" cellpadding="0" cellspacing="0" id="auth_table"></table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="parentAuthorityGroup_tree_con" class="c_pagecon digs_con w-200 h-300 ps-absolute bd-rad-0 bg-f bd-ddd bd-solid bd-w-1" style="background: #fff;display:none;">
    <div class="c_body">
        <div class="c_bodyinner">
            <ul id="parentAuthorityGroup_tree" class="ztree"></ul>
        </div>
    </div>
    <div class="c_foot">
        <div class="form-submitbtn-con txt-center"><button type="button" id="btn_cachetreeselect" class="btn btn-xs btn-blue">关闭</button></div>
    </div>
</div>
@section Scripts
    {
    <environment>
        <script src="~/lib/ztree/jquery.ztree.all.js"></script>
        <script src="~/lib/ztree/ztree.exhide.js"></script>
    </environment>
    <environment exclude="Development">
        <script src="~/lib/ztree/tree.min.js"></script>
    </environment>
    <script type="text/javascript">
        BodyScroll = false
        HasDivPageCon = true;
        var isAdd = true;
        var imgPath = "";
        var changeSortUrl = '@Url.Action("ChangeAuthorityGroupSortIndex", "Sys")';
        var deleteUrl = '@Url.Action("DeleteAuthorityGroup", "Sys")';
        var bindOperationUrl='@Url.Action("AuthorityBindOperationList", "Sys",new { authCode="_acode" })';
        var loadingIcoUrl = '/Content/Scripts/ztree/img/loading.gif';
        var editAuthorityGroup = null;
        var editAuthUrl='@Html.Raw(Url.Action("EditAuthority","Sys",new { code="_id",groupSysNo="_gsysno"}))';
        var authCloseStatus=@((int)AuthorityStatus.关闭);
        var authOpenStatus=@((int)AuthorityStatus.启用);
        var authStatusDic=new Object();
        var seetings = {
            view: {
                nameIsHTML: true,
            },
            callback: {
                onClick: AllAuthorityGroupNodeClick,
                beforeDrag: beforeDrag,
                beforeDrop: beforeDrop,
                beforeExpand: BeforeExpand,
            },
            check: {
                enable: true,
                chkboxType: { "Y": "", "N": "" }
            },
            edit: {
                enable: true,
                showRemoveBtn: false,
                showRenameBtn: false,
                drag: {
                    isMove: true,
                    inner: false,
                    prev: true,
                    next: true
                }
            }
        };
        var parentTreeSettings =
            {
                view: {
                    nameIsHTML: true,
                    //showIcon: false
                },
                callback: {
                    onClick: SelectAuthorityGroupNodeClick,
                    beforeExpand: SelectBeforeExpand
                }
            };

        var allNodes = @Html.Raw(nodeString);
        var selectNodes = @Html.Raw(selectNodeString);
        var allAuthorityGroups = @Html.Raw(allAuthorityGroup);
        var selectedNode = null;
        $(function () {
            authStatusDic=JSON.parse('@Html.Raw(JsonSerialize.ObjectToJson(statusValues))');
            InitAllAuthorityGroupTree();
            InitSelectAuthorityGroupTree();

            //权限表格
            InitDataTable({
                TableEle:'#auth_table',
                "columnDefs": [
				        { "title": '<input type="checkbox" class="cbx_all"/>', "targets": 0,"data":function ( row, type, val, meta ) {
				            return '<input type="checkbox" class="cbx_val" value="'+row.Code+'"/>';
				        },width:'20px',className:'txt-center' },
    					{ "title": "名称", "targets": 1,"data":'Name',width:'200px' },
    					{ "title": "编码", "targets": 2,"data":'Code',width:'150px' },
    					{ "title": "状态", "targets": 3,"data":'Status',width:'50px',className:"txt-center",render:function(data, type, row, meta){
    					    return authStatusDic[data];
    					}
    					},
    					{ "title": "说明", "targets": 4,"data":'Remark' },
    					{ "title": "操作", "targets": 5,"data":function(row,type,val,meta){
    					    var menuItems=new Array();
    					    menuItems.push('<li><a href="javascript:void(0)" class="btn_edit" sysno="_sysNo" authname="_name"><i class="glyphicon glyphicon-edit"></i> 编辑</a></li>'.replace('_sysNo',row.Code).replace('_name',row.Name));
    					    if(row.Status==@((int)AuthorityStatus.启用)){
    					        menuItems.push('<li><a href="javascript:void(0)" class="btn_status_close" sysno="_sysNo" authname="_name"><i class="glyphicon glyphicon-eye-close"></i> 关闭</a></li>'.replace('_sysNo',row.Code).replace('_name',row.Name));
    					}else{
                            					        menuItems.push('<li><a href="javascript:void(0)" class="btn_status_open" sysno="_sysNo" authname="_name"><i class="glyphicon glyphicon-eye-open"></i> 开启</a></li>'.replace('_sysNo',row.Code).replace('_name',row.Name));
                            }
    					    menuItems.push('<li><a href="javascript:void(0)" class="btn_action_auth" sysno="_sysNo" authname="_name"><i class="glyphicon glyphicon-check"></i> 关联</a></li>'.replace('_sysNo',row.Code).replace('_name',row.Name));
        menuItems.push('<li><a href="javascript:void(0)" class="btn_auth_delete" sysno="_sysNo" authname="_name"><i class="glyphicon glyphicon-trash"></i> 删除</a></li>'.replace('_sysNo',row.Code).replace('_name',row.Name));
    					    return '<div class="btn-group"><button type="button" class="btn btn-blue dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">管理 <span class="caret"></span></button><ul class="dropdown-menu list-dropdown-menu" style="width:62px">'+menuItems.join('')+'</ul></div>';
    					},width:'62px',className:'txt-center' },
                ]
            });

            //添加一级
            $("#btn_addlevelone").click(function () {
                ResetForm();
                $("#ParentName").val(JoinParentAuthorityGroupNames(null));
            });

            //上移
            $("#btn_sortup").click(function () {
                if (!selectedNode) {
                    return;
                }
                var prevNode = selectedNode.getPreNode();
                if (!prevNode) {
                    return;
                }
                MoveNode(selectedNode, prevNode, 'prev');
            });
            //下移
            $("#btn_sortdown").click(function () {
                if (!selectedNode) {
                    return;
                }
                var nextNode = selectedNode.getNextNode();
                if (!nextNode) {
                    return;
                }
                MoveNode(selectedNode, nextNode, 'next');
            });

            //删除
            $("#btn_deleteselect").click(function () {
                var checkNodes = $.fn.zTree.getZTreeObj("AuthorityGroup_tree").getCheckedNodes(true);
                var sysNoArray = new Array();
                for (var i = 0; i < checkNodes.length; i++) {
                    sysNoArray.push(checkNodes[i].id);
                }
                DeleteAuthorityGroup(sysNoArray.join(','));
            });

            //上级权限分组
            $("#ParentName").focus(function () {
                var ele = $(this);
                var treeCon = $("#parentAuthorityGroup_tree_con");
                treeCon.css("left", ele.offset().left);
                treeCon.css("top", ele.offset().top + ele.height() + 2);
                treeCon.show();
            });
            //取消权限分组选择
            $("#btn_cachetreeselect").click(function () {
                $("#parentAuthorityGroup_tree_con").hide();
            });
            //添加权限
            $("#btn_addauthority").click(function(){
                ShowEditAuthority('添加权限','');
            });
            //编辑权限
            $("body").on("click",".btn_edit",function(){
                var sysNo=$.trim($(this).attr('sysno'));
                var authName=$.trim($(this).attr('authname'));
                if(sysNo==''){
                    return;
                }
                var tit=authName==''?'编辑权限':'编辑权限【'+authName+'】';
                ShowEditAuthority(tit,sysNo)
            });
            //关闭权限
            $("body").on('click','.btn_status_close',function(){
                var sysNo=$.trim($(this).attr('sysno'));
                ModifyAuthStatus(sysNo,authCloseStatus)
            });
            //开启权限
            $("body").on('click','.btn_status_open',function(){
                var sysNo=$.trim($(this).attr('sysno'));
                ModifyAuthStatus(sysNo,authOpenStatus)
            });
            //删除权限
            $("body").on('click','.btn_auth_delete',function(){
                DeleteAuthority($(this).attr('sysno'));
            });
            //删除选中权限
            $('body').on('click','#btn_delselectauthority',function(){
                var checkedValues = GetDataTableCheckedValues("#auth_table");
                var checkedValueString = checkedValues.join(",");
                DeleteAuthority(checkedValueString);
            });
            //查看权限关联操作
            $("body").on("click",".btn_action_auth",function(){
                var sysNo=$.trim($(this).attr("sysno"));
                var authName=$.trim($(this).attr("authname"));
                ShowBindOperation(sysNo,authName);
            });
        });

        //移动节点
        function MoveNode(treeNode, targetNode, moveType) {
            if (treeNode.tId == targetNode.tId) {
                return false;
            }
            var sortIndex = 0;
            if (moveType == "inner") {
                if (targetNode.tId != treeNode.parentTId) {
                    return false;
                }
                sortIndex = 1;
            } else {
                if (treeNode.parentTId != targetNode.parentTId) {
                    return false;
                }
                var targetId = targetNode.id;
                var targetArea = allAuthorityGroups[targetId];
                if (!targetArea) {
                    return false;
                }
                sortIndex = moveType == "prev" ? targetArea.SortIndex : targetArea.SortIndex + 1;
            }
            var nowId = treeNode.id;
            $.post(changeSortUrl, { sysNo: nowId, sortIndex: sortIndex }, function (res) {
                if (res.Success) {
                    InitData(res);
                }
            })
            $.fn.zTree.getZTreeObj("AuthorityGroup_tree").moveNode(targetNode, treeNode, moveType, true);
            return false;
        }

        //拖拽之前事件
        function beforeDrag(treeId, treeNodes) {
            for (var i = 0, l = treeNodes.length; i < l; i++) {
                if (treeNodes[i].drag === false) {
                    return false;
                }
            }
            return true;
        }

        //拖拽事件
        function beforeDrop(treeId, treeNodes, targetNode, moveType) {
            if (!treeNodes || !targetNode || treeNodes.length <= 0) {
                return false;
            }
            var firstNode = treeNodes[0];
            return MoveNode(firstNode, targetNode, moveType);
        }

        //提交表单
        function SubmitForm() {
            $("#AuthorityGroupform").submit();
        }

        //重置表单
        function ResetForm() {
            $("#AuthorityGroupform")[0].reset();
            $("#parentAuthorityGroup_tree_con").hide();
            isAdd = true;
            InitSelectAuthorityGroupTree();
            $("#SysNo,#Parent").val('0');
            editAuthorityGroup = null;
            HideDetailForm();
        }

        //权限分组选择节点点击
        function SelectAuthorityGroupNodeClick(event, treeId, treeNode) {
            var parentNodeNames = JoinParentAuthorityGroupNames(treeNode);
            $("#ParentName").val(parentNodeNames);
            $("#Parent_SysNo").val(treeNode.id);
            $("#parentAuthorityGroup_tree_con").hide();
        }

        function JoinParentAuthorityGroupNames(treeNode) {
            if (!treeNode) {
                return "一级分组";
            }
            var parentNodes = new Array();
            var nowNode = treeNode;
            var parentNodeNames = '';
            while (true) {
                var parentNode = nowNode.getParentNode();
                if (!parentNode) {
                    break;
                }
                nowNode = parentNode;
                parentNodeNames = parentNode.name + '->' + parentNodeNames;
            }
            parentNodeNames += treeNode.name;
            return parentNodeNames;
        };

        //左侧权限分组节点选择
        function AllAuthorityGroupNodeClick(event, treeId, treeNode) {
            var nowAuthorityGroup = allAuthorityGroups[treeNode.id];
            editAuthorityGroup = nowAuthorityGroup;
            var parentNodeNames = JoinParentAuthorityGroupNames(treeNode.getParentNode());
            InitEditAuthorityGroup(nowAuthorityGroup, parentNodeNames);
            selectedNode = treeNode;
            //HideSelectAuthorityGroupNodes(treeNode.level);
            InitSelectAuthorityGroupTree();
            selectNodeLevel=treeNode.level;
            $.fn.zTree.getZTreeObj("AuthorityGroup_tree").selectNode(treeNode, false);
        }

        //初始化编辑权限分组
        function InitEditAuthorityGroup(area, parentNames) {
            if (!area) {
                return;
            }
            $("#ParentName").val(parentNames);
            var parentSysNo=0;
            if(area.Parent)
            {
                parentSysNo=area.Parent.SysNo;
            }
            $("#Parent_SysNo").val(parentSysNo);
            $("#SysNo").val(area.SysNo);
            $("#Name").val(area.Name);
            $("#Status").val(area.Status);
            $("#Remark").val(area.Remark);
            isAdd = false;
            ShowDetailForm();
        };

        //添加成功
        function EditSuccess(res) {
            ResultMsg(res);
            if (res.Success) {
                if (isAdd) {
                    ResetForm();
                }
                InitData(res);
            }
        }

        //初始化数据
        function InitData(res) {
            allNodes = JSON.parse(res.Data.AllNode);
            if(!allNodes){
                return;
            }
            selectNodes = JSON.parse(res.Data.SelectNode);
            if(!selectNodes){
                selectNodes=[];
            }
            allAuthorityGroups = JSON.parse(res.Data.AllAuthorityGroup);
            if(!allAuthorityGroups){
                return;
            }
            InitAllAuthorityGroupTree();
            InitSelectAuthorityGroupTree();
        }

        //初始化所有权限分组树控件
        function InitAllAuthorityGroupTree() {
            $.fn.zTree.init($("#AuthorityGroup_tree"), seetings, allNodes);
        }

        //初始化选择权限分组树控件
        function InitSelectAuthorityGroupTree() {
            $.fn.zTree.init($("#parentAuthorityGroup_tree"), parentTreeSettings, selectNodes);
        }

        //隐藏大于等于指定级别的选择权限分组
        function HideSelectAuthorityGroupNodes(startLevel) {
            InitSelectAuthorityGroupTree();
            var treeObj = $.fn.zTree.getZTreeObj("parentAuthorityGroup_tree");
            var nodes = treeObj.getNodesByFilter(function (node) {
                return node.level >= startLevel && node.name != '一级分组';
            }, false);
            treeObj.hideNodes(nodes);
        }

        function DeleteAuthorityGroup(sysNos) {
            if ($.trim(sysNos) == "") {
                ErrorMsg("没有选择要删除的权限分组信息");
                return;
            }
            ConfirmMsg('删除权限分组将删除相应的子分组及分组下的权限数据,确认删除吗?', function (res) {
                $.post(deleteUrl, { sysNos: sysNos }, function (res) {
                    ResultMsg(res);
                    if (res.Success) {
                        InitData(res);
                        ResetForm();
                    }
                });
            });
        }

        //展开加载数据
        function BeforeExpand(treeId, treeNode){
            if(!treeNode||treeNode.loadData){
                return true;
            }
            var zTree=$.fn.zTree.getZTreeObj(treeId);
            treeNode.icon = loadingIcoUrl;
            zTree.updateNode(treeNode);
            $.post('@Url.Action("LoadChildAuthorityGroups","Sys")',{parentId:treeNode.id},function(res){
                if(!res){
                    return;
                }
                var childNodes=JSON.parse(res.ChildNodes);
                zTree.addNodes(treeNode, -1, childNodes);
                treeNode.loadData = true;
                treeNode.icon = "";
                zTree.updateNode(treeNode);
                zTree.expandNode(treeNode,true);
                var childAuthorityGroups=JSON.parse(res.AuthorityGroupData);
                for(var c in childAuthorityGroups){
                    allAuthorityGroups[c]=childAuthorityGroups[c];
                }
            });
            return false;
        }

        //选择权限分组展开
        function SelectBeforeExpand(treeId, treeNode){
            if(!treeNode||treeNode.loadData){
                return true;
            }
            if(editAuthorityGroup&&treeNode.level>=selectNodeLevel-1){
                return true;
            }
            var zTree=$.fn.zTree.getZTreeObj(treeId);
            treeNode.icon = loadingIcoUrl;
            zTree.updateNode(treeNode);
            $.post('@Url.Action("LoadChildAuthorityGroups","Sys")',{parentId:treeNode.id},function(res){
                if(!res){
                    return;
                }
                var childNodes=JSON.parse(res.ChildNodes);
                zTree.addNodes(treeNode, -1, childNodes);
                treeNode.loadData = true;
                treeNode.icon = "";
                zTree.updateNode(treeNode);
                zTree.expandNode(treeNode,true);
                var childAuthorityGroups=JSON.parse(res.AuthorityGroupData);
                for(var c in childAuthorityGroups){
                    allAuthorityGroups[c]=childAuthorityGroups[c];
                }
            });
            return false;
        }

        //显示权限管理窗口
        function ShowDetailForm(){
            LoadAuthoritys();
            $("#detail_tabform").removeClass("hide");
            $(window).resize();
        }

        //隐藏权限管理窗口
        function HideDetailForm(){
            $("#detail_tabform").addClass("hide");
            $("#auth_tabe_page_list").html("");
        }

        //显示编辑权限
        function ShowEditAuthority(tit,authSysNo){
            if(!editAuthorityGroup){
                ErrorMsg("请先选择权限分组");
                return;
            }
            DialogPage({
                url: editAuthUrl.replace('_id',authSysNo).replace('_gsysno',editAuthorityGroup.SysNo),
                width: "600px",
                height: "280px",
                title: tit,
                ok: false,
                cancel: null
            });
        }

        //加载权限数据
        function LoadAuthoritys(){
            if(!editAuthorityGroup){
                return;
            }
            var loadUrl='@Url.Action("GetAuthoritys","Sys")';
            $.post(loadUrl,{groupSysNo:editAuthorityGroup.SysNo,key:$.trim($("#search_authname").val())},function(res){
                ReplaceDataTableData("#auth_table",JSON.parse(res.Datas));
                $(window).resize();
            });
        }

        //修改权限状态
        function ModifyAuthStatus(code,status){
            var tit=status==authCloseStatus?'确认关闭权限吗?':'确认开启权限吗?';
            ConfirmMsg(tit, function () {
                code=$.trim(code);
                if(code==""){
                    ErrorMsg('请指定要操作的权限数据');
                    return;
                }
                $.post('@Url.Action("ModifyAuthorityStatus","Sys")',{codes:code,status:status},function(res){
                    ResultMsg(res);
                    if(res&&res.Success){
                        LoadAuthoritys();
                    }
                });
            });
        }

        //删除权限
        function DeleteAuthority(codes){
            codes=$.trim(codes);
            if(codes==""){
                ErrorMsg('没有指定要删除的权限');
                return;
            }
            ConfirmMsg('权限删除将不能恢复,确认删除吗?', function () {
                $.post('@Url.Action("DeleteAuthority", "Sys")',{codes:codes},function(res){
                    ResultMsg(res);
                    if(res&&res.Success){
                        LoadAuthoritys();
                    }
                });
            });
        }

        //显示权限绑定的操作
        function ShowBindOperation(code,authName){
            var bindUrl=bindOperationUrl.replace('_acode',code);
            var tit='权限【'+authName+'】关联操作'
            DialogPage({
                url: bindUrl,
                width: "600px",
                height: "400px",
                title: tit,
                ok: false,
                cancel: null
            });
        }

    </script>
}

