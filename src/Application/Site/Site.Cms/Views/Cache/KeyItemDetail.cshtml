
@{
    ViewBag.Title = "缓存详情";
}
@using MicShop.ViewModel.Cache
@using MicBeach.Cache
@model KeyItemViewModel
<div id="pc-body">
    <div id="pc-body-inner">
            <table cellpadding="0" cellspacing="0" class="detail-table">
                <tr>
                    <td class="detail-tit w-150">键：</td>
                    <td class="detail-txt">
                        @Model.Key
                    </td>
                </tr>
                <tr>
                    <td class="detail-tit">类型：</td>
                    <td class="detail-txt">
                        @switch (Model.Type)
                        {
                            case CacheKeyType.String:
                                @:字符串
                        break;
                            case CacheKeyType.List:
                                @:列表
                        break;
                            case CacheKeyType.Set:
                                @:集合
                        break;
                            case CacheKeyType.SortedSet:
                                @:排序集合
                        break;
                            case CacheKeyType.Hash:
                                @:Hash对象
                        break;
                        }
                    </td>
                </tr>
                <tr>
                    <td class="detail-tit">值：</td>
                    <td class="detail-txt">
                        @if (Model.Value != null)
                        {
                            switch (Model.Type)
                            {
                                case CacheKeyType.String:
                                    @Model.Value.ToString()
                                    break;
                                case CacheKeyType.List:
                                case CacheKeyType.Set:
                                case CacheKeyType.SortedSet:
                                    List<string> values = Model.Value as List<string>;
                                    if (values != null)
                                    {
                                        foreach (var value in values)
                                        {
                                            <div>@value</div>
                                        }
                                    }
                                    break;
                                case CacheKeyType.Hash:
                                    Dictionary<string, string> hashValues = Model.Value as Dictionary<string, string>;
                                    if (hashValues != null)
                                    {
                                        foreach (var valueItem in hashValues)
                                        {
                                            <div><span>@valueItem.Key:</span><span>@valueItem.Value</span></div>
                                        }
                                    }
                                    break;

                            }
                        }
                    </td>
                </tr>
            </table>
    </div>
</div>
