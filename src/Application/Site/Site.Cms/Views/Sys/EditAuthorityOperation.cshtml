@{
    ViewBag.Title = "编辑授权操作";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using MicBeach.Util.Extension
@using MicBeach.ViewModel.Sys
@using MicBeach.Application.Identity.Auth
@model AuthorityOperationViewModel
@{
    bool isAdd = Model.SysNo <= 0;
}
<div id="pc-body">
    <div id="pc-body-inner">
        <div class="form-con" id="home">
            @using (Html.AjaxBeginForm("EditAuthorityOperation", "Sys", new AjaxFormOptions() { HttpMethod = "Post", OnSuccess = "SuccessCallback", OnFailure = "FailedCallback" }, new { id = "formvalide" }))
            {
                @Html.Hidden("SysNo", null, new { id = "SysNo" })
                @Html.HiddenFor(r => r.Group.SysNo)
                <table cellpadding="0" cellspacing="0" class="form_table">
                    <tr>
                        <td class="txt-right tit"><button type="button" class="btn btn-xs btn-success" id="btn_selectgroup"><i class="glyphicon glyphicon-check"></i> 选择</button></td>
                        <td id="groupname_td">
                            【@ViewBag.GroupName】
                        </td>
                    </tr>
                    <tr>
                        <td class="txt-right tit">* @Html.LabelFor(c => c.Name)</td>
                        <td>
                            @Html.TextBoxFor(a => a.Name, new { @class = "form-control w-200" })
                            @Html.DefaultValidationMessageFor(a => a.Name, "", new { @class = "tip prompt" })
                        </td>
                    </tr>
                    <tr>
                        <td class="txt-right tit">* @Html.LabelFor(c => c.ControllerCode)</td>
                        <td>
                            @Html.TextBoxFor(a => a.ControllerCode, new { @class = "form-control w-200" })
                            @Html.DefaultValidationMessageFor(a => a.ControllerCode, "", new { @class = "tip prompt" })
                        </td>
                    </tr>
                    <tr>
                        <td class="txt-right tit">* @Html.LabelFor(c => c.ActionCode)</td>
                        <td>
                            @Html.TextBoxFor(a => a.ActionCode, new { @class = "form-control w-200" })
                            @Html.DefaultValidationMessageFor(a => a.ActionCode, "", new { @class = "tip prompt" })
                        </td>
                    </tr>
                    <tr>
                        <td class="txt-right tit">@Html.LabelFor(c => c.Method)</td>
                        <td>
                            @Html.EnumToSelect(a => a.Method, AuthorityOperationMethod.全部, new { @class = "form-control w-200" }, selectedValue: (Model == null ? "" : ((int)Model.Method).ToString()))
                            @Html.DefaultValidationMessageFor(a => a.Method, "", new { @class = "tip prompt" })
                        </td>
                    </tr>
                    <tr>
                        <td class="txt-right tit">@Html.LabelFor(c => c.AuthorizeType)</td>
                        <td>
                            @Html.EnumToSelect(a => a.AuthorizeType, AuthorityOperationAuthorizeType.无限制, new { @class = "form-control w-200" }, selectedValue: (Model == null ? "" : ((int)Model.AuthorizeType).ToString()))
                            @Html.DefaultValidationMessageFor(a => a.AuthorizeType, "", new { @class = "tip prompt" })
                        </td>
                    </tr>
                    <tr>
                        <td class="txt-right tit">* @Html.LabelFor(c => c.Status)</td>
                        <td>
                            @Html.EnumToSelect(a => a.Status, AuthorityOperationStatus.启用, new { @class = "form-control w-200" }, "", "选择状态", ((int)Model.Status).ToString())
                            @Html.DefaultValidationMessageFor(a => a.Status, "", new { @class = "tip prompt" })
                        </td>
                    </tr>
                    @*<tr>
                        <td class="txt-right tit">@Html.LabelFor(c => c.Remark)</td>
                        <td>
                            @Html.TextAreaFor(a => a.Remark, new { @class = "form-control w-200", style = "height:50px" })
                            @Html.DefaultValidationMessageFor(a => a.Remark, "", new { @class = "tip prompt" })
                        </td>
                    </tr>*@
                </table>
            }
        </div>
    </div>
</div>
<div id="pc-foot">
    <div class="txt-right form-submitbtn-con pdr-10"><button type="button" onclick="SubmitForm()" class="btn btn-blue"><i class="glyphicon glyphicon-floppy-save"></i> 提交</button></div>
</div>

@section Scripts
{
    <script type="text/javascript">
        HasDivPageCon = true;
        $(function () {
            //选择分组
            $("#btn_selectgroup").click(function () {
                SelectGroup();
            });
        })
        var isAdd = '@isAdd.ToString().ToLower()' == 'true';

        //提交表单
        function SubmitForm() {
            $("#formvalide").submit();
        }

        //成功回调
        function SuccessCallback(res) {
            if (!res) {
                return;
            }
            if (res.Success) {
                art.dialog.opener.LoadActions();
                art.dialog.close(true);
            } else {
                ResultMsg(res);
            }
        }

        //失败回调
        function FailedCallback(res) {
            ErrorMsg('提交失败');
        }

        //选择分组
        function SelectGroup() {
            DialogPage({
                url: '@Url.Action("AuthorityOperationGroupSingleSelect","Sys")',
                width: "300px",
                height: "400px",
                title: '选择操作分组',
                ok: false,
                cancel: null
            });
        }

        //分组选择回调
        function AuthorityOperationGroupSingleSelectCallback(group, parentsNames) {
            if (group) {
                $("#groupname_td").html('【' + parentsNames + '】');
                $("#Group_SysNo").val(group.SysNo);
            }
        }

    </script>
}
